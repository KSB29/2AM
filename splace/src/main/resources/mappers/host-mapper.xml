<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hostMapper">
	<resultMap type="Host" id="hostResultSet">
		<id property="hostId" column="HOST_ID"/>
		<result property="hostPhone" column="HOST_PHONE"/>
		<result property="hostEmail" column="HOST_EMAIL"/>
		<result property="hostName" column="HOST_NAME"/>
		<result property="storeName" column="STORE_NAME"/>
		<result property="hostNo" column="HOST_NO"/>
		<result property="hostBank" column="HOST_BANK"/>
		<result property="hostAccount" column="HOST_ACCOUNT"/>
		<result property="hostBname" column="HOST_BNAME"/>
		<result property="hostEnroll" column="HOST_ENROLL"/>
		<result property="hostUpdate" column="HOST_UPDATE"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="statusId" column="STATUS_ID"/>
	</resultMap>
	
	<resultMap type="BookList" id="bookResultSet">
		<id property="bookId" column="BOOK_ID"/>
		<result property="bookEnroll" column="BOOK_ENROLL"/>
		<result property="bookPrice" column="BOOK_PRICE"/>
		<result property="bookDate" column="BOOK_DATE"/>
		<result property="bookStartTime" column="BOOK_START_TIME"/>
		<result property="bookEndTime" column="BOOK_END_TIME"/>
		<result property="bookPer" column="BOOK_PER"/>
		<result property="bookRequest" column="BOOK_REQUEST"/>
		<result property="booker" column="BOOKER"/>
		<result property="bookerPhone" column="BOOKER_PHONE"/>
		<result property="bookerEmail" column="BOOKER_EMAIL"/>
		<result property="bookCancel" column="BOOK_CANCEL"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="spaceId" column="SPACE_ID"/>
		<result property="statusId" column="STATUS_ID"/>
		<result property="approvalDate" column="APPROVAL_DATE"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="spaceName" column="SPACE_NAME"/>
		<result property="statusName" column="STATUS_NAME"/>
	</resultMap>
	
	<resultMap type="Space" id="hostSpaceResultSet">
		<id property="spaceId" column="SPACE_ID"/>
		<result property="spaceName" column="SPACE_NAME"/>
	</resultMap>
	
	<resultMap type="Status" id="statusResultSet">
		<id property="statusId" column="STATUS_ID"/>
		<result property="statusName" column="STATUS_NAME"/>
	</resultMap>
	
	<resultMap type="Qna" id="hostQnaResultSet">
		<id property="qnaId" column="QNA_ID"/>
		<result property="qContent" column="Q_CONTENT"/>
		<result property="qDate" column="Q_DATE"/>
		<result property="aContent" column="A_CONTENT"/>
		<result property="aDate" column="A_DATE"/>
		<result property="qType" column="Q_TYPE"/>
		<result property="qStatus" column="Q_STATUS"/>
		<result property="qMemberId" column="Q_MEMBER_ID"/>
		<result property="aMemberId" column="A_MEMBER_ID"/>
		<result property="spaceId" column="SPACE_ID"/>
		<result property="qMemberName" column="MEMBER_NAME"/>
		<result property="spaceName" column="SPACE_NAME"/>
	</resultMap>
	
	<resultMap type="Account" id="hostAccountResultSet">
		<id property="accountId" column="ACCOUNT_ID"/>
		<result property="accountStart" column="ACCOUNT_START"/>
		<result property="accountEnd" column="ACCOUNT_END"/>
		<result property="accountTotal" column="ACCOUNT_TOTAL"/>
		<result property="accountFee" column="ACCOUNT_FEE"/>
		<result property="accountPrice" column="ACCOUNT_PRICE"/>
		<result property="hoshId" column="HOSH_ID"/>
	</resultMap>
	
	<resultMap type="Review" id="hostReviewResult">
		<id property="reviewId" column="REVIEW_ID"/>
		<result property="reviewScore" column="REVIEW_SCORE"/>
		<result property="reviewContent" column="REVIEW_CONTENT"/>
		<result property="reviewEnroll" column="REVIEW_ENROLL"/>
		<result property="reviewUpdate" column="REVIEW_UPDATE"/>
		<result property="reviewStatus" column="REVIEW_STATUS"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="spaceId" column="SPACE_ID"/>
		<result property="bookId" column="BOOK_ID"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="spaceName" column="SPACE_NAME"/>
		<result property="attInfo" column="ATT_INFO"/>
	</resultMap>
	
	<!-- 호스트 정보 조회 -->
	<select id="selectOne" resultMap="hostResultSet" parameterType="string">
		SELECT *
		FROM   HOST
		WHERE  MEMBER_ID = #{memberId}
	</select>
	
	<!-- 호스트 정보 조회 -->
	<select id="selectInfo" resultMap="hostResultSet" parameterType="_int">
		SELECT *
		FROM   HOST
		WHERE  HOST_ID = #{hostId}
	</select>
	
	<!-- 호스트 신규 등록 -->
	<insert id="insertHost" parameterType="Host">
		INSERT INTO HOST
		VALUES (SEQ_H.NEXTVAL,
				#{hostPhone},
				#{hostEmail},
				#{hostName},
				#{storeName},
				#{hostNo},
				#{hostBank},
				#{hostAccount},
				#{hostBname},
				SYSDATE,
				SYSDATE,
				#{memberId},
				0)
	</insert>
	
	<!-- 호스트 정보 수정 -->
	<update id="updateHost" parameterType="Host">
		UPDATE HOST
		SET    HOST_PHONE = #{hostPhone},
			   HOST_EMAIL = #{hostEmail},
			   <!-- 승인 이전에만 수정 가능 -->
			   <if test="statusId != 2">
			   HOST_NAME = #{hostName},
			   STORE_NAME = #{storeName},
			   HOST_NO = #{hostNo},
			   </if>
			   HOST_BANK = #{hostBank},
			   HOST_ACCOUNT = #{hostAccount},
			   HOST_BNAME = #{hostBname},
			   HOST_UPDATE = SYSDATE
		WHERE  HOST_ID = #{hostId}
		AND    MEMBER_ID = #{memberId}
	</update>
	
	<!-- 호스트 승인 요청 -->
	<update id="updateApplyHost" parameterType="_int">
		UPDATE HOST
		SET    STATUS_ID = 1, <!-- 대기 -->
			   HOST_UPDATE = SYSDATE
		WHERE  HOST_ID = #{hostId}
	</update>
	
	<!-- 예약리스트 수 조회 -->
	<select id="getbListCount" resultType="_int" parameterType="HostSearch">
	<bind name="hostId" value="_parameter.getHostId()" />
	<bind name="spaceId" value="_parameter.getSpaceId()" />
	<bind name="statusId" value="_parameter.getStatusId()" />
		SELECT COUNT(*)
		FROM   BOOK B,
		       STATUS S,
		       MEMBER M,
		       SPACE H
		WHERE  B.STATUS_ID = S.STATUS_ID
		AND    B.MEMBER_ID = M.MEMBER_ID
		AND    B.SPACE_ID = H.SPACE_ID
		<if test="spaceId != null">
		AND    B.SPACE_ID = NVL(#{spaceId}, B.SPACE_ID)
		</if>
		<if test="statusId != null">
		AND    B.STATUS_ID = NVL(#{statusId}, B.STATUS_ID)
		</if>
		AND    H.HOST_ID = #{hostId}
	</select>
	
	<!-- 예약리스트 내역 조회 -->
	<select id="selectBookList" resultMap="bookResultSet" parameterType="HostSearch">
	<bind name="hostId" value="_parameter.getHostId()" />
	<bind name="spaceId" value="_parameter.getSpaceId()" />
	<bind name="statusId" value="_parameter.getStatusId()" />
		SELECT B.*,
			   M.MEMBER_NAME,
			   H.SPACE_NAME,
			   S.STATUS_NAME
		FROM   BOOK B,
		       STATUS S,
		       MEMBER M,
		       SPACE H
		WHERE  B.STATUS_ID = S.STATUS_ID
		AND    B.MEMBER_ID = M.MEMBER_ID
		AND    B.SPACE_ID = H.SPACE_ID
		<if test="spaceId != null">
		AND    B.SPACE_ID = NVL(#{spaceId}, B.SPACE_ID)
		</if>
		<if test="statusId != null">
		AND    B.STATUS_ID = NVL(#{statusId}, B.STATUS_ID)
		</if>
		AND    H.HOST_ID = #{hostId}
	</select>
	
	<!-- 호스트의 공간 리스트 내역 -->
	<select id="selectSpaceList" resultMap="hostSpaceResultSet" parameterType="_int">
		SELECT SPACE_ID, SPACE_NAME
		FROM   SPACE
		WHERE  HOST_ID = #{hostId}
		ORDER BY SPACE_ID DESC
	</select>
	
	<!-- 상태 리스트 내역 -->
	<select id="selectStatus" resultMap="statusResultSet" parameterType="string">
		SELECT *
		FROM   STATUS
		WHERE  STATUS_ID BETWEEN DECODE(#{status}, 'bStatus', 100, 0) AND DECODE(#{status}, 'bStatus', 100, 0) + 3
		ORDER BY STATUS_ID
	</select>
	
	<!-- 공간 예약 승인 처리 -->
	<update id="updateApproveBook" parameterType="string">
		UPDATE BOOK
		SET    STATUS_ID = '101',
			   APPROVAL_DATE = SYSDATE
		WHERE  STATUS_ID = '100'
		AND    BOOK_ID = #{bookId}
	</update>
	
	<!-- 예약 승인 처리 시 알림 등록 -->
	<insert id="insertNoticeApprove" parameterType="string">
		INSERT INTO NOTICE
		SELECT SEQ_N.NEXTVAL, '공간 예약이 승인되었습니다.', SYSDATE, '0', MEMBER_ID
		FROM   BOOK
		WHERE  BOOK_ID = #{bookId}
	</insert>
	
	<!-- 공간 예약 취소 처리 -->
	<update id="updateCancelBook" parameterType="string">
		UPDATE BOOK
		SET    STATUS_ID = '102',
			   BOOK_CANCEL = SYSDATE
		WHERE  STATUS_ID = '100'
		AND    BOOK_ID = #{bookId}
	</update>
	
	<!-- 예약 취소 처리 시 알림 등록 -->
	<insert id="insertNoticeCancel" parameterType="string">
		INSERT INTO NOTICE
		SELECT SEQ_N.NEXTVAL, '공간 예약이 취소되었습니다.', SYSDATE, '0', MEMBER_ID
		FROM   BOOK
		WHERE  BOOK_ID = #{bookId}
	</insert>
	
	<!-- 공간 문의 리스트 수 조회 -->
	<select id="getqListCount" resultType="_int" parameterType="HostSearch">
	<bind name="hostId" value="_parameter.getHostId()" />
	<bind name="spaceId" value="_parameter.getSpaceId()" />
	<bind name="statusId" value="_parameter.getStatusId()" />
		SELECT COUNT(*)
		FROM   QNA    Q,
			   MEMBER M,
			   SPACE  S
		WHERE  Q.Q_MEMBER_ID = M.MEMBER_ID
		AND    Q.SPACE_ID = S.SPACE_ID
		AND    S.HOST_ID = #{hostId}
		<if test="spaceId != null">
		AND    S.SPACE_ID = NVL(#{spaceId}, S.SPACE_ID)
		</if>
		<if test="statusId != null">
		AND    ((NVL(#{statusId}, '1') = '1' AND Q.A_CONTENT IS NOT NULL) OR
			    (NVL(#{statusId}, '0') = '0' AND Q.A_CONTENT IS NULL))
		</if>
		AND    Q.Q_TYPE = '0'
		AND    Q.Q_STATUS = 'Y'
	</select>
	
	<!-- 공간 문의 리스트 내역 조회 -->
	<select id="selectQnaList" resultMap="hostQnaResultSet" parameterType="HostSearch">
	<bind name="hostId" value="_parameter.getHostId()" />
	<bind name="spaceId" value="_parameter.getSpaceId()" />
	<bind name="statusId" value="_parameter.getStatusId()" />
		SELECT Q.*,
			   S.SPACE_NAME,
			   M.MEMBER_NAME
		FROM   QNA    Q,
			   MEMBER M,
			   SPACE  S
		WHERE  Q.Q_MEMBER_ID = M.MEMBER_ID
		AND    Q.SPACE_ID = S.SPACE_ID
		AND    S.HOST_ID = #{hostId}
		<if test="spaceId != null">
		AND    S.SPACE_ID = NVL(#{spaceId}, S.SPACE_ID)
		</if>
		<if test="statusId != null">
		AND    ((NVL(#{statusId}, '1') = '1' AND Q.A_CONTENT IS NOT NULL) OR
			    (NVL(#{statusId}, '0') = '0' AND Q.A_CONTENT IS NULL))
		</if>
		AND    Q.Q_TYPE = '0'
		AND    Q.Q_STATUS = 'Y'
		ORDER BY QNA_ID DESC
	</select>
	
	<!-- 공간 문의 답변 -->
	<update id="updateAnswer" parameterType="QnA">
	<bind name="aContent" value="_parameter.getaContent()" />
	<bind name="qnaId" value="_parameter.getQnaId()" />
	<bind name="aMemberId" value="_parameter.getaMemberId()" />
		UPDATE QNA
		SET    A_CONTENT = #{aContent},
			   A_MEMBER_ID = #{aMemberId},
			   A_DATE = SYSDATE
		WHERE  QNA_ID = #{qnaId}
	</update>
	
	<!-- 정산 내역 건 수 조회 -->
	<select id="getaListCount" resultType="_int">
		SELECT COUNT(*)
		FROM   ACCOUNT
		WHERE  HOSH_ID = #{hoshId}
	</select>
	
	<!-- 정산 내역 조회 -->
	<select id="selectAccountList" resultMap="hostAccountResultSet" >
		SELECT *
		FROM   ACCOUNT
		WHERE  HOSH_ID = #{hoshId}
		ORDER BY ACCOUNT_ID DESC
	</select>
	
	<!-- 후기 내역 전 수 조회 -->
	<select id="getrListCount" resultType="_int" parameterType="HostSearch">
	<bind name="hostId" value="_parameter.getHostId()" />
	<bind name="spaceId" value="_parameter.getSpaceId()" />
		SELECT COUNT(*)
		FROM   REVIEW R,
			   SPACE  S
		WHERE  R.SPACE_ID = S.SPACE_ID
		<if test="spaceId != null">
		AND    S.SPACE_ID = NVL(#{spaceId}, S.SPACE_ID)
		</if>
		AND    S.HOST_ID = #{hostId}
	</select>
	
	<!-- 후기 내역 조회 -->
	<select id="selectReview" resultMap="hostReviewResult" parameterType="HostSearch">
	<bind name="hostId" value="_parameter.getHostId()" />
	<bind name="spaceId" value="_parameter.getSpaceId()" />
		SELECT R.*,
			   S.SPACE_NAME,
			   M.MEMBER_NAME,
			   (SELECT 'Y' FROM REVIEW_ATT A WHERE A.REVIEW_ID = R.REVIEW_ID AND ROWNUM = 1) ATT_INFO
		FROM   REVIEW R,
			   SPACE  S,
			   MEMBER M
		WHERE  R.SPACE_ID = S.SPACE_ID
		<if test="spaceId != null">
		AND    S.SPACE_ID = NVL(#{spaceId}, S.SPACE_ID)
		</if>
		AND    S.HOST_ID = #{hostId}
		AND    R.MEMBER_ID = M.MEMBER_ID
		ORDER BY REVIEW_ID DESC
	</select>
	
	<select id="selectReviewAtt" resultType="string" parameterType="_int">
		SELECT REVIEW_ATT_CHANGE
		FROM   REVIEW_ATT
		WHERE  REVIEW_ID = #{reviewId}
	</select>
	
</mapper>
